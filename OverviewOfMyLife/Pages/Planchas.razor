@page "/planchas"
@using OverviewOfMyLife.Models
@using OverviewOfMyLife.Models.Charts.ProgressBar
@inject OverviewOfMyLife.Services.PlanchasService PlanchasService

<h3>Planchas</h3>

<style>
    .square
    {
        height: 15px;
        width: 15px;
    }

    .progress-bar
    {
        display: grid;
        grid-template-columns: repeat(auto-fill, 15px); /* Crear columnas del tamaño del cuadrado */
        grid-template-rows: repeat(auto-fill, 15px); /* Crear columnas del tamaño del cuadrado */
        gap: 1px; /* Espacio entre cuadrados */
        width: 100%;
        background-color: black;
        font-size: 8px;
    }
</style>

@if (progressBar == null)
{
    <p><em>Loading...</em></p>
}
else if (!progressBar.Events.Any())
{
    <p>No data found.</p>
}
else
{
    <div class="progress-bar">
        @foreach (var item in progressBar.Events)
        {
            <div class="square" style="background-color: @item.Color">@item.DateTime.Day</div>
        }
    </div>
}

@code {
    private ProgressBar progressBar;

    protected override async Task OnInitializedAsync()
    {
        progressBar = await PlanchasService.GetProgressBar();
    }
}
