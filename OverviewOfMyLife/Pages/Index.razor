@page "/"
@using System.Globalization

<PageTitle>Index</PageTitle>

<style>
    .grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, 3px); /* Crear columnas del tamaño del cuadrado */
        grid-template-rows: repeat(auto-fill, 3px); /* Crear columnas del tamaño del cuadrado */
        gap: 1px; /* Espacio entre cuadrados */
        width: 100%;
    }

    .active-square, .inactive-square, .month-label {
        
    }

    .active-square {
        background-color: greenyellow;
    }

    .inactive-square {
        background-color: lightgrey;
    }
    .month-label {
        grid-column: span 2;
        float:left;
        overflow: hidden;
        font-size: 4px;
    }

    .year-label {
        grid-column: span 3;
        background: gray;
        font-size: 4px;
        float: left;
        overflow: hidden;
    }
</style>

<h1>Anthony Cantuta - Edad @age - @startDateTime.ToString("dd/MMMM/yyyy", new CultureInfo("es-ES"))</h1>
<h2>Días vividos @livedDays - Días restantes @daysLeft (50 años)</h2>

<div class="grid">
    @foreach(var day in listOfDays)
    {
        if (day < today)
        {
            <div class="active-square">
                
            </div>
        }
        else
        {
            <div class="inactive-square">

            </div>
        }
        if (IsFirstMonth(day) && IsFirstDayOfMonth(day))
        {
            <div class="year-label"> @day.Year </div>
        }


        if (IsFirstDayOfMonth(day))
        {
            <div class="month-label"> <!-- Multiplicar por el tamaño y margen del cuadrado --> @day.ToString("MMM", new CultureInfo("es-ES")) </div>
        }

        
    }    
</div>

@code{
    DateTime startDateTime;
    DateTime today;
    DateTime lastDateTime;
    int age;
    int livedDays;
    int daysLeft;
    List<DateTime> listOfDays = new List<DateTime>();

    protected override void OnInitialized()
    {
        startDateTime = new DateTime(1989, 4, 12);
        today = DateTime.Today;
        lastDateTime = new DateTime(2039, 4, 12);
        TimeSpan diffTodayStart = today - startDateTime;
        TimeSpan diffLastToday = lastDateTime - today;
        livedDays = diffTodayStart.Days;
        age = today.Year - startDateTime.Year;
        daysLeft = diffLastToday.Days;

        var tempDateTime = new DateTime(startDateTime.Year, startDateTime.Month, startDateTime.Day);

        while (tempDateTime < lastDateTime)
        {
            listOfDays.Add(tempDateTime);
            tempDateTime = tempDateTime.AddDays(1);
        }

    }

    bool IsFirstDayOfMonth(DateTime date) { return date.Day == 1; }
    bool IsFirstMonth(DateTime date){ return date.Month == 1;}
}